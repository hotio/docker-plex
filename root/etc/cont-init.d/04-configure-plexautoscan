#!/usr/bin/with-contenv bash
# shellcheck shell=bash

umask "${UMASK}"

if [[ ! -f "${CONFIG_DIR}/plexautoscan/config.json" ]]; then
    echo "Installing default \"config.json\"..."
    cp /etc/plexautoscan/config.json "${CONFIG_DIR}/plexautoscan/config.json"
    chown hotio:hotio "${CONFIG_DIR}/plexautoscan/config.json"
    password=$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c"${1:-32}";echo;)
    [[ ${GITHUB_CI} == true ]] && password=githubci
    sed -i "s#\"SERVER_PASS\": \".*\",#\"SERVER_PASS\": \"${password}\",#g" "${CONFIG_DIR}/plexautoscan/config.json" && echo "Your PlexAutoscan password is: ${password}"
fi

if [[ ! -f "${CONFIG_DIR}/plexautoscan/plex.token" ]] && [[ -n ${PLEX_LOGIN} ]] && [[ -n ${PLEX_PASSWORD} ]]; then
    echo "Trying to get a Plex token for PlexAutoscan..."
    curl -fsSL -u "${PLEX_LOGIN}":"${PLEX_PASSWORD}" 'https://plex.tv/users/sign_in.json' -X POST -H 'X-Plex-Client-Identifier: '"$(uuidgen)" -H 'X-Plex-Product: PlexAutoscan' -H 'X-Plex-Provides: controller' -H 'X-Plex-Device: '"$(uname -s) $(uname -r)" | jq . \
        > "${CONFIG_DIR}/plexautoscan/plex.token" && chown hotio:hotio "${CONFIG_DIR}/plexautoscan/plex.token"

    token="$(jq -r .[].authentication_token "${CONFIG_DIR}/plexautoscan/plex.token")"
    if [[ -n ${token} ]] && [[ ${token} != null ]]; then
        sed -i "s#\"PLEX_TOKEN\": \".*\",#\"PLEX_TOKEN\": \"${token}\",#g" "${CONFIG_DIR}/plexautoscan/config.json" && echo "Updated \"config.json\" with token \"${token}\"."
    else
        echo "Something went wrong trying to get a token!"
    fi
fi
